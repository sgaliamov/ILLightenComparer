image: Visual Studio 2017

version: 'build-{build}'

configuration: release

branches:
  only:
  - develop
  - master

skip_tags: true

skip_branch_with_pr: true

dotnet_csproj:
  patch: true
  file: src\ILLightenComparer\ILLightenComparer.csproj
  version: $(GitVersion_NuGetVersion)
  assembly_version: $(GitVersion_MajorMinorPatch)
  file_version: $(GitVersion_MajorMinorPatch)
  informational_version: $(GitVersion_InformationalVersion)

before_build:
- pwsh: |
    gitversion /l console /output buildserver /verbosity warn

build_script:
- pwsh: |
    if ($env:APPVEYOR_REPO_BRANCH -ne 'master') {
        $env:CONFIGURATION = 'debug'
    }
    dotnet build .\src -c $env:CONFIGURATION -v m
    dotnet pack .\src\ILLightenComparer\ --include-source --include-symbols --no-build --no-dependencies -c $env:CONFIGURATION -v m -o publish

# test:
#   assemblies:
#     - '**\*.tests.dll'

artifacts:
- path: '.\src\ILLightenComparer\publish\*.nupkg'
  name: nuget-package
  type: NuGetPackage

# before_deploy:
# - pwsh: |
#     Get-ChildItem .\src\ILLightenComparer\**\*.nupkg -Recurse | ForEach-Object {
#       Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName "nuget-package"
#     }

deploy:
- provider: Environment
  name: appveyor-nuget
  on:
    branch: master


# install:
#   - choco install gitversion.portable -pre -y

# assembly_info:
#   patch: false

# before_build:
#   - nuget restore
#   - ps: gitversion /l console /output buildserver /updateAssemblyInfo

# build:
#   project: <your sln file>

# after_build:
#   - cmd: ECHO nuget pack <Project>\<NuSpec>.nuspec -version "%GitVersion_NuGetVersion%" -prop "target=%CONFIGURATION%"
#   - cmd: nuget pack <Project>\<NuSpec>.nuspec -version "%GitVersion_NuGetVersion%" -prop "target=%CONFIGURATION%"
#   - cmd: appveyor PushArtifact "<NuSpec>.%GitVersion_NuGetVersion%.nupkg"
